/******************************************************************************
*  Generated by PSoC Designer 5.0.423.0
******************************************************************************/
#include <m8c.h>
// C1CHA address and mask defines
#pragma	ioport	C1CHA_Data_ADDR:	0x0
BYTE			C1CHA_Data_ADDR;
#pragma	ioport	C1CHA_DriveMode_0_ADDR:	0x100
BYTE			C1CHA_DriveMode_0_ADDR;
#pragma	ioport	C1CHA_DriveMode_1_ADDR:	0x101
BYTE			C1CHA_DriveMode_1_ADDR;
#pragma	ioport	C1CHA_DriveMode_2_ADDR:	0x3
BYTE			C1CHA_DriveMode_2_ADDR;
#pragma	ioport	C1CHA_GlobalSelect_ADDR:	0x2
BYTE			C1CHA_GlobalSelect_ADDR;
#pragma	ioport	C1CHA_IntCtrl_0_ADDR:	0x102
BYTE			C1CHA_IntCtrl_0_ADDR;
#pragma	ioport	C1CHA_IntCtrl_1_ADDR:	0x103
BYTE			C1CHA_IntCtrl_1_ADDR;
#pragma	ioport	C1CHA_IntEn_ADDR:	0x1
BYTE			C1CHA_IntEn_ADDR;
#define C1CHA_MASK 0x1
// C1CHB address and mask defines
#pragma	ioport	C1CHB_Data_ADDR:	0x0
BYTE			C1CHB_Data_ADDR;
#pragma	ioport	C1CHB_DriveMode_0_ADDR:	0x100
BYTE			C1CHB_DriveMode_0_ADDR;
#pragma	ioport	C1CHB_DriveMode_1_ADDR:	0x101
BYTE			C1CHB_DriveMode_1_ADDR;
#pragma	ioport	C1CHB_DriveMode_2_ADDR:	0x3
BYTE			C1CHB_DriveMode_2_ADDR;
#pragma	ioport	C1CHB_GlobalSelect_ADDR:	0x2
BYTE			C1CHB_GlobalSelect_ADDR;
#pragma	ioport	C1CHB_IntCtrl_0_ADDR:	0x102
BYTE			C1CHB_IntCtrl_0_ADDR;
#pragma	ioport	C1CHB_IntCtrl_1_ADDR:	0x103
BYTE			C1CHB_IntCtrl_1_ADDR;
#pragma	ioport	C1CHB_IntEn_ADDR:	0x1
BYTE			C1CHB_IntEn_ADDR;
#define C1CHB_MASK 0x2
// C2CHA address and mask defines
#pragma	ioport	C2CHA_Data_ADDR:	0x0
BYTE			C2CHA_Data_ADDR;
#pragma	ioport	C2CHA_DriveMode_0_ADDR:	0x100
BYTE			C2CHA_DriveMode_0_ADDR;
#pragma	ioport	C2CHA_DriveMode_1_ADDR:	0x101
BYTE			C2CHA_DriveMode_1_ADDR;
#pragma	ioport	C2CHA_DriveMode_2_ADDR:	0x3
BYTE			C2CHA_DriveMode_2_ADDR;
#pragma	ioport	C2CHA_GlobalSelect_ADDR:	0x2
BYTE			C2CHA_GlobalSelect_ADDR;
#pragma	ioport	C2CHA_IntCtrl_0_ADDR:	0x102
BYTE			C2CHA_IntCtrl_0_ADDR;
#pragma	ioport	C2CHA_IntCtrl_1_ADDR:	0x103
BYTE			C2CHA_IntCtrl_1_ADDR;
#pragma	ioport	C2CHA_IntEn_ADDR:	0x1
BYTE			C2CHA_IntEn_ADDR;
#define C2CHA_MASK 0x4
// C2CHB address and mask defines
#pragma	ioport	C2CHB_Data_ADDR:	0x0
BYTE			C2CHB_Data_ADDR;
#pragma	ioport	C2CHB_DriveMode_0_ADDR:	0x100
BYTE			C2CHB_DriveMode_0_ADDR;
#pragma	ioport	C2CHB_DriveMode_1_ADDR:	0x101
BYTE			C2CHB_DriveMode_1_ADDR;
#pragma	ioport	C2CHB_DriveMode_2_ADDR:	0x3
BYTE			C2CHB_DriveMode_2_ADDR;
#pragma	ioport	C2CHB_GlobalSelect_ADDR:	0x2
BYTE			C2CHB_GlobalSelect_ADDR;
#pragma	ioport	C2CHB_IntCtrl_0_ADDR:	0x102
BYTE			C2CHB_IntCtrl_0_ADDR;
#pragma	ioport	C2CHB_IntCtrl_1_ADDR:	0x103
BYTE			C2CHB_IntCtrl_1_ADDR;
#pragma	ioport	C2CHB_IntEn_ADDR:	0x1
BYTE			C2CHB_IntEn_ADDR;
#define C2CHB_MASK 0x8
// UART_MIRR_RX address and mask defines
#pragma	ioport	UART_MIRR_RX_Data_ADDR:	0x0
BYTE			UART_MIRR_RX_Data_ADDR;
#pragma	ioport	UART_MIRR_RX_DriveMode_0_ADDR:	0x100
BYTE			UART_MIRR_RX_DriveMode_0_ADDR;
#pragma	ioport	UART_MIRR_RX_DriveMode_1_ADDR:	0x101
BYTE			UART_MIRR_RX_DriveMode_1_ADDR;
#pragma	ioport	UART_MIRR_RX_DriveMode_2_ADDR:	0x3
BYTE			UART_MIRR_RX_DriveMode_2_ADDR;
#pragma	ioport	UART_MIRR_RX_GlobalSelect_ADDR:	0x2
BYTE			UART_MIRR_RX_GlobalSelect_ADDR;
#pragma	ioport	UART_MIRR_RX_IntCtrl_0_ADDR:	0x102
BYTE			UART_MIRR_RX_IntCtrl_0_ADDR;
#pragma	ioport	UART_MIRR_RX_IntCtrl_1_ADDR:	0x103
BYTE			UART_MIRR_RX_IntCtrl_1_ADDR;
#pragma	ioport	UART_MIRR_RX_IntEn_ADDR:	0x1
BYTE			UART_MIRR_RX_IntEn_ADDR;
#define UART_MIRR_RX_MASK 0x10
// UART_MIRR_TX address and mask defines
#pragma	ioport	UART_MIRR_TX_Data_ADDR:	0x0
BYTE			UART_MIRR_TX_Data_ADDR;
#pragma	ioport	UART_MIRR_TX_DriveMode_0_ADDR:	0x100
BYTE			UART_MIRR_TX_DriveMode_0_ADDR;
#pragma	ioport	UART_MIRR_TX_DriveMode_1_ADDR:	0x101
BYTE			UART_MIRR_TX_DriveMode_1_ADDR;
#pragma	ioport	UART_MIRR_TX_DriveMode_2_ADDR:	0x3
BYTE			UART_MIRR_TX_DriveMode_2_ADDR;
#pragma	ioport	UART_MIRR_TX_GlobalSelect_ADDR:	0x2
BYTE			UART_MIRR_TX_GlobalSelect_ADDR;
#pragma	ioport	UART_MIRR_TX_IntCtrl_0_ADDR:	0x102
BYTE			UART_MIRR_TX_IntCtrl_0_ADDR;
#pragma	ioport	UART_MIRR_TX_IntCtrl_1_ADDR:	0x103
BYTE			UART_MIRR_TX_IntCtrl_1_ADDR;
#pragma	ioport	UART_MIRR_TX_IntEn_ADDR:	0x1
BYTE			UART_MIRR_TX_IntEn_ADDR;
#define UART_MIRR_TX_MASK 0x20
// UART_RX address and mask defines
#pragma	ioport	UART_RX_Data_ADDR:	0x0
BYTE			UART_RX_Data_ADDR;
#pragma	ioport	UART_RX_DriveMode_0_ADDR:	0x100
BYTE			UART_RX_DriveMode_0_ADDR;
#pragma	ioport	UART_RX_DriveMode_1_ADDR:	0x101
BYTE			UART_RX_DriveMode_1_ADDR;
#pragma	ioport	UART_RX_DriveMode_2_ADDR:	0x3
BYTE			UART_RX_DriveMode_2_ADDR;
#pragma	ioport	UART_RX_GlobalSelect_ADDR:	0x2
BYTE			UART_RX_GlobalSelect_ADDR;
#pragma	ioport	UART_RX_IntCtrl_0_ADDR:	0x102
BYTE			UART_RX_IntCtrl_0_ADDR;
#pragma	ioport	UART_RX_IntCtrl_1_ADDR:	0x103
BYTE			UART_RX_IntCtrl_1_ADDR;
#pragma	ioport	UART_RX_IntEn_ADDR:	0x1
BYTE			UART_RX_IntEn_ADDR;
#define UART_RX_MASK 0x40
// UART_TX address and mask defines
#pragma	ioport	UART_TX_Data_ADDR:	0x0
BYTE			UART_TX_Data_ADDR;
#pragma	ioport	UART_TX_DriveMode_0_ADDR:	0x100
BYTE			UART_TX_DriveMode_0_ADDR;
#pragma	ioport	UART_TX_DriveMode_1_ADDR:	0x101
BYTE			UART_TX_DriveMode_1_ADDR;
#pragma	ioport	UART_TX_DriveMode_2_ADDR:	0x3
BYTE			UART_TX_DriveMode_2_ADDR;
#pragma	ioport	UART_TX_GlobalSelect_ADDR:	0x2
BYTE			UART_TX_GlobalSelect_ADDR;
#pragma	ioport	UART_TX_IntCtrl_0_ADDR:	0x102
BYTE			UART_TX_IntCtrl_0_ADDR;
#pragma	ioport	UART_TX_IntCtrl_1_ADDR:	0x103
BYTE			UART_TX_IntCtrl_1_ADDR;
#pragma	ioport	UART_TX_IntEn_ADDR:	0x1
BYTE			UART_TX_IntEn_ADDR;
#define UART_TX_MASK 0x80
// IN_JACK address and mask defines
#pragma	ioport	IN_JACK_Data_ADDR:	0x4
BYTE			IN_JACK_Data_ADDR;
#pragma	ioport	IN_JACK_DriveMode_0_ADDR:	0x104
BYTE			IN_JACK_DriveMode_0_ADDR;
#pragma	ioport	IN_JACK_DriveMode_1_ADDR:	0x105
BYTE			IN_JACK_DriveMode_1_ADDR;
#pragma	ioport	IN_JACK_DriveMode_2_ADDR:	0x7
BYTE			IN_JACK_DriveMode_2_ADDR;
#pragma	ioport	IN_JACK_GlobalSelect_ADDR:	0x6
BYTE			IN_JACK_GlobalSelect_ADDR;
#pragma	ioport	IN_JACK_IntCtrl_0_ADDR:	0x106
BYTE			IN_JACK_IntCtrl_0_ADDR;
#pragma	ioport	IN_JACK_IntCtrl_1_ADDR:	0x107
BYTE			IN_JACK_IntCtrl_1_ADDR;
#pragma	ioport	IN_JACK_IntEn_ADDR:	0x5
BYTE			IN_JACK_IntEn_ADDR;
#define IN_JACK_MASK 0x1
// PWM1_A address and mask defines
#pragma	ioport	PWM1_A_Data_ADDR:	0x4
BYTE			PWM1_A_Data_ADDR;
#pragma	ioport	PWM1_A_DriveMode_0_ADDR:	0x104
BYTE			PWM1_A_DriveMode_0_ADDR;
#pragma	ioport	PWM1_A_DriveMode_1_ADDR:	0x105
BYTE			PWM1_A_DriveMode_1_ADDR;
#pragma	ioport	PWM1_A_DriveMode_2_ADDR:	0x7
BYTE			PWM1_A_DriveMode_2_ADDR;
#pragma	ioport	PWM1_A_GlobalSelect_ADDR:	0x6
BYTE			PWM1_A_GlobalSelect_ADDR;
#pragma	ioport	PWM1_A_IntCtrl_0_ADDR:	0x106
BYTE			PWM1_A_IntCtrl_0_ADDR;
#pragma	ioport	PWM1_A_IntCtrl_1_ADDR:	0x107
BYTE			PWM1_A_IntCtrl_1_ADDR;
#pragma	ioport	PWM1_A_IntEn_ADDR:	0x5
BYTE			PWM1_A_IntEn_ADDR;
#define PWM1_A_MASK 0x2
// PWM1_B address and mask defines
#pragma	ioport	PWM1_B_Data_ADDR:	0x4
BYTE			PWM1_B_Data_ADDR;
#pragma	ioport	PWM1_B_DriveMode_0_ADDR:	0x104
BYTE			PWM1_B_DriveMode_0_ADDR;
#pragma	ioport	PWM1_B_DriveMode_1_ADDR:	0x105
BYTE			PWM1_B_DriveMode_1_ADDR;
#pragma	ioport	PWM1_B_DriveMode_2_ADDR:	0x7
BYTE			PWM1_B_DriveMode_2_ADDR;
#pragma	ioport	PWM1_B_GlobalSelect_ADDR:	0x6
BYTE			PWM1_B_GlobalSelect_ADDR;
#pragma	ioport	PWM1_B_IntCtrl_0_ADDR:	0x106
BYTE			PWM1_B_IntCtrl_0_ADDR;
#pragma	ioport	PWM1_B_IntCtrl_1_ADDR:	0x107
BYTE			PWM1_B_IntCtrl_1_ADDR;
#pragma	ioport	PWM1_B_IntEn_ADDR:	0x5
BYTE			PWM1_B_IntEn_ADDR;
#define PWM1_B_MASK 0x4
// PWM2_A address and mask defines
#pragma	ioport	PWM2_A_Data_ADDR:	0x4
BYTE			PWM2_A_Data_ADDR;
#pragma	ioport	PWM2_A_DriveMode_0_ADDR:	0x104
BYTE			PWM2_A_DriveMode_0_ADDR;
#pragma	ioport	PWM2_A_DriveMode_1_ADDR:	0x105
BYTE			PWM2_A_DriveMode_1_ADDR;
#pragma	ioport	PWM2_A_DriveMode_2_ADDR:	0x7
BYTE			PWM2_A_DriveMode_2_ADDR;
#pragma	ioport	PWM2_A_GlobalSelect_ADDR:	0x6
BYTE			PWM2_A_GlobalSelect_ADDR;
#pragma	ioport	PWM2_A_IntCtrl_0_ADDR:	0x106
BYTE			PWM2_A_IntCtrl_0_ADDR;
#pragma	ioport	PWM2_A_IntCtrl_1_ADDR:	0x107
BYTE			PWM2_A_IntCtrl_1_ADDR;
#pragma	ioport	PWM2_A_IntEn_ADDR:	0x5
BYTE			PWM2_A_IntEn_ADDR;
#define PWM2_A_MASK 0x8
// PWM2_B address and mask defines
#pragma	ioport	PWM2_B_Data_ADDR:	0x4
BYTE			PWM2_B_Data_ADDR;
#pragma	ioport	PWM2_B_DriveMode_0_ADDR:	0x104
BYTE			PWM2_B_DriveMode_0_ADDR;
#pragma	ioport	PWM2_B_DriveMode_1_ADDR:	0x105
BYTE			PWM2_B_DriveMode_1_ADDR;
#pragma	ioport	PWM2_B_DriveMode_2_ADDR:	0x7
BYTE			PWM2_B_DriveMode_2_ADDR;
#pragma	ioport	PWM2_B_GlobalSelect_ADDR:	0x6
BYTE			PWM2_B_GlobalSelect_ADDR;
#pragma	ioport	PWM2_B_IntCtrl_0_ADDR:	0x106
BYTE			PWM2_B_IntCtrl_0_ADDR;
#pragma	ioport	PWM2_B_IntCtrl_1_ADDR:	0x107
BYTE			PWM2_B_IntCtrl_1_ADDR;
#pragma	ioport	PWM2_B_IntEn_ADDR:	0x5
BYTE			PWM2_B_IntEn_ADDR;
#define PWM2_B_MASK 0x10
// I2CHW_1SDA address and mask defines
#pragma	ioport	I2CHW_1SDA_Data_ADDR:	0x4
BYTE			I2CHW_1SDA_Data_ADDR;
#pragma	ioport	I2CHW_1SDA_DriveMode_0_ADDR:	0x104
BYTE			I2CHW_1SDA_DriveMode_0_ADDR;
#pragma	ioport	I2CHW_1SDA_DriveMode_1_ADDR:	0x105
BYTE			I2CHW_1SDA_DriveMode_1_ADDR;
#pragma	ioport	I2CHW_1SDA_DriveMode_2_ADDR:	0x7
BYTE			I2CHW_1SDA_DriveMode_2_ADDR;
#pragma	ioport	I2CHW_1SDA_GlobalSelect_ADDR:	0x6
BYTE			I2CHW_1SDA_GlobalSelect_ADDR;
#pragma	ioport	I2CHW_1SDA_IntCtrl_0_ADDR:	0x106
BYTE			I2CHW_1SDA_IntCtrl_0_ADDR;
#pragma	ioport	I2CHW_1SDA_IntCtrl_1_ADDR:	0x107
BYTE			I2CHW_1SDA_IntCtrl_1_ADDR;
#pragma	ioport	I2CHW_1SDA_IntEn_ADDR:	0x5
BYTE			I2CHW_1SDA_IntEn_ADDR;
#define I2CHW_1SDA_MASK 0x20
// LED2 address and mask defines
#pragma	ioport	LED2_Data_ADDR:	0x4
BYTE			LED2_Data_ADDR;
#pragma	ioport	LED2_DriveMode_0_ADDR:	0x104
BYTE			LED2_DriveMode_0_ADDR;
#pragma	ioport	LED2_DriveMode_1_ADDR:	0x105
BYTE			LED2_DriveMode_1_ADDR;
#pragma	ioport	LED2_DriveMode_2_ADDR:	0x7
BYTE			LED2_DriveMode_2_ADDR;
#pragma	ioport	LED2_GlobalSelect_ADDR:	0x6
BYTE			LED2_GlobalSelect_ADDR;
#pragma	ioport	LED2_IntCtrl_0_ADDR:	0x106
BYTE			LED2_IntCtrl_0_ADDR;
#pragma	ioport	LED2_IntCtrl_1_ADDR:	0x107
BYTE			LED2_IntCtrl_1_ADDR;
#pragma	ioport	LED2_IntEn_ADDR:	0x5
BYTE			LED2_IntEn_ADDR;
#define LED2_MASK 0x40
// I2CHW_1SCL address and mask defines
#pragma	ioport	I2CHW_1SCL_Data_ADDR:	0x4
BYTE			I2CHW_1SCL_Data_ADDR;
#pragma	ioport	I2CHW_1SCL_DriveMode_0_ADDR:	0x104
BYTE			I2CHW_1SCL_DriveMode_0_ADDR;
#pragma	ioport	I2CHW_1SCL_DriveMode_1_ADDR:	0x105
BYTE			I2CHW_1SCL_DriveMode_1_ADDR;
#pragma	ioport	I2CHW_1SCL_DriveMode_2_ADDR:	0x7
BYTE			I2CHW_1SCL_DriveMode_2_ADDR;
#pragma	ioport	I2CHW_1SCL_GlobalSelect_ADDR:	0x6
BYTE			I2CHW_1SCL_GlobalSelect_ADDR;
#pragma	ioport	I2CHW_1SCL_IntCtrl_0_ADDR:	0x106
BYTE			I2CHW_1SCL_IntCtrl_0_ADDR;
#pragma	ioport	I2CHW_1SCL_IntCtrl_1_ADDR:	0x107
BYTE			I2CHW_1SCL_IntCtrl_1_ADDR;
#pragma	ioport	I2CHW_1SCL_IntEn_ADDR:	0x5
BYTE			I2CHW_1SCL_IntEn_ADDR;
#define I2CHW_1SCL_MASK 0x80
// LED1 address and mask defines
#pragma	ioport	LED1_Data_ADDR:	0x8
BYTE			LED1_Data_ADDR;
#pragma	ioport	LED1_DriveMode_0_ADDR:	0x108
BYTE			LED1_DriveMode_0_ADDR;
#pragma	ioport	LED1_DriveMode_1_ADDR:	0x109
BYTE			LED1_DriveMode_1_ADDR;
#pragma	ioport	LED1_DriveMode_2_ADDR:	0xb
BYTE			LED1_DriveMode_2_ADDR;
#pragma	ioport	LED1_GlobalSelect_ADDR:	0xa
BYTE			LED1_GlobalSelect_ADDR;
#pragma	ioport	LED1_IntCtrl_0_ADDR:	0x10a
BYTE			LED1_IntCtrl_0_ADDR;
#pragma	ioport	LED1_IntCtrl_1_ADDR:	0x10b
BYTE			LED1_IntCtrl_1_ADDR;
#pragma	ioport	LED1_IntEn_ADDR:	0x9
BYTE			LED1_IntEn_ADDR;
#define LED1_MASK 0x2
// LED3 address and mask defines
#pragma	ioport	LED3_Data_ADDR:	0x8
BYTE			LED3_Data_ADDR;
#pragma	ioport	LED3_DriveMode_0_ADDR:	0x108
BYTE			LED3_DriveMode_0_ADDR;
#pragma	ioport	LED3_DriveMode_1_ADDR:	0x109
BYTE			LED3_DriveMode_1_ADDR;
#pragma	ioport	LED3_DriveMode_2_ADDR:	0xb
BYTE			LED3_DriveMode_2_ADDR;
#pragma	ioport	LED3_GlobalSelect_ADDR:	0xa
BYTE			LED3_GlobalSelect_ADDR;
#pragma	ioport	LED3_IntCtrl_0_ADDR:	0x10a
BYTE			LED3_IntCtrl_0_ADDR;
#pragma	ioport	LED3_IntCtrl_1_ADDR:	0x10b
BYTE			LED3_IntCtrl_1_ADDR;
#pragma	ioport	LED3_IntEn_ADDR:	0x9
BYTE			LED3_IntEn_ADDR;
#define LED3_MASK 0x80
